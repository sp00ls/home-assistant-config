esphome:
  name: upstairs-ble-hub
  friendly_name: upstairs-ble-hub

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret upstairs_ble_hub_hassio_encryption_key

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "upstairs-ble-hub-fallback"
    password: !secret captive_portal_password

captive_portal:

esp32_ble_tracker:
bluetooth_proxy:
    active: true

text_sensor:
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start

sensor:
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    disabled_by_default: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
  - platform: wifi_signal
    name: "WiFi Strength"
    disabled_by_default: true
    update_interval: 60s

output:
  platform: ledc
  id: buzzer_output
  pin: GPIO2

switch:
  - platform: output 
    name: "Buzzer"
    disabled_by_default: true
    id: buzzer
    output: buzzer_output
    on_turn_on: 
      then:
        - output.turn_on: buzzer_output
        - output.ledc.set_frequency:
            id: buzzer_output
            frequency: "500Hz"
        - output.set_level:
            id: buzzer_output
            level: "50%"

    on_turn_off:
      then:
        - output.turn_off: buzzer_output