esphome:
  name: basement-water-sensor
  platform: ESP8266
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret basement-water-sensor_hassio_encryption_key

ota:
  password: !secret ota_update_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "basement-water-sensor-fallback"
    password: !secret captive_portal_password

captive_portal:

text_sensor:
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
  - platform: template
    name: Basement Status
    id: basement_status
sensor:
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    disabled_by_default: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
  - platform: wifi_signal
    name: "WiFi Strength"
    disabled_by_default: true
    update_interval: 60s
  - platform: dht
    pin: D1
    temperature:
      name: "Basement Temperature"
    humidity:
      name: "Basement Humidity"
    update_interval: 30s
    model: DHT22
  - platform: duty_cycle
    pin: GPIO4
    name: "Water level"
    id: water_level
    update_interval: 5s
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(water_level).state >= 8;'
            then:
              - script.execute: water_sensed_script
        - if:
            condition:
              lambda: 'return id(water_level).state < 8;'
            then:
              - script.execute: water_not_sensed_script
    
output:
  - platform: gpio
    pin: GPIO0
    id: 'buzzer_output'
  - platform: gpio
    pin: GPIO14
    id: 'green_light_output'
  - platform: gpio
    pin: GPIO12
    id: 'red_light_output'

script:
  - id: water_sensed_script
    then:
      - output.turn_off:
          id: green_light_output
      - output.turn_on: buzzer_output
      - output.turn_on:
            id: red_light_output
      - text_sensor.template.publish:
          id: basement_status
          state: "WATER IN BASEMENT"
  - id: water_not_sensed_script
    then:
      - output.turn_off:
          id: red_light_output
      - output.turn_off: buzzer_output
      - output.turn_on:
            id: green_light_output
      - text_sensor.template.publish:
          id: basement_status
          state: "BASEMENT OK"
