esphome:
  name: garage-door-ble-hub
  friendly_name: garage-door-ble-hub

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret garage-door-ble-hub_hassio_encryption_key

ota:
  - platform: esphome
    password: !secret ota_update_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "garage-door-ble-hub-fallback"
    password: !secret captive_portal_password

captive_portal:

##########

# Relay BLE devices to HASSIO
esp32_ble_tracker:
bluetooth_proxy:
  active: true

# Provide human readable uptime
text_sensor:
  - platform: template
    name: Uptime
    id: uptime_human
    icon: mdi:clock-start
sensor:
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
  - platform: wifi_signal
    name: "WiFi Strength"
    update_interval: 60s

# Internal switch to trigger relay
switch:
  - platform: gpio
    id: gd_relay
    # name: "GD_RELAY"
    restore_mode: ALWAYS_OFF
    pin:
      number: GPIO2
    on_turn_on:
      - delay: 200ms
      - switch.turn_off: gd_relay

# Sensor to detect when garage door is closed
binary_sensor:
  - platform: gpio
    id: gd_closed_sensor
    name: "Closed"
    device_class: garage_door
    pin:
      number: GPIO15
      mode: INPUT_PULLUP

# Provide a 'cover' entity for display of the garage door
cover:
  - platform: template
    id: garage_door
    name: "Garage Door"
    device_class: garage
    lambda: |-
      if(id(gd_closed_sensor).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      - switch.turn_on: gd_relay
    close_action:
      - switch.turn_on: gd_relay
    stop_action:
      - switch.turn_on: gd_relay